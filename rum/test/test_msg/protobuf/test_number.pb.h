// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: test_number.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_test_5fnumber_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_test_5fnumber_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_test_5fnumber_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_test_5fnumber_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_test_5fnumber_2eproto;
namespace rum {
namespace test {
namespace proto {
class Number;
struct NumberDefaultTypeInternal;
extern NumberDefaultTypeInternal _Number_default_instance_;
}  // namespace proto
}  // namespace test
}  // namespace rum
PROTOBUF_NAMESPACE_OPEN
template<> ::rum::test::proto::Number* Arena::CreateMaybeMessage<::rum::test::proto::Number>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace rum {
namespace test {
namespace proto {

// ===================================================================

class Number final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:rum.test.proto.Number) */ {
 public:
  inline Number() : Number(nullptr) {}
  ~Number() override;
  explicit constexpr Number(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  Number(const Number& from);
  Number(Number&& from) noexcept
    : Number() {
    *this = ::std::move(from);
  }

  inline Number& operator=(const Number& from) {
    CopyFrom(from);
    return *this;
  }
  inline Number& operator=(Number&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Number& default_instance() {
    return *internal_default_instance();
  }
  static inline const Number* internal_default_instance() {
    return reinterpret_cast<const Number*>(
               &_Number_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Number& a, Number& b) {
    a.Swap(&b);
  }
  inline void Swap(Number* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Number* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Number* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<Number>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const Number& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const Number& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Number* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "rum.test.proto.Number";
  }
  protected:
  explicit Number(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kN1FieldNumber = 1,
    kN2FieldNumber = 2,
    kL1FieldNumber = 3,
    kL2FieldNumber = 4,
    kD1FieldNumber = 5,
    kD2FieldNumber = 6,
  };
  // int32 n1 = 1;
  void clear_n1();
  int32_t n1() const;
  void set_n1(int32_t value);
  private:
  int32_t _internal_n1() const;
  void _internal_set_n1(int32_t value);
  public:

  // int32 n2 = 2;
  void clear_n2();
  int32_t n2() const;
  void set_n2(int32_t value);
  private:
  int32_t _internal_n2() const;
  void _internal_set_n2(int32_t value);
  public:

  // uint64 l1 = 3;
  void clear_l1();
  uint64_t l1() const;
  void set_l1(uint64_t value);
  private:
  uint64_t _internal_l1() const;
  void _internal_set_l1(uint64_t value);
  public:

  // uint64 l2 = 4;
  void clear_l2();
  uint64_t l2() const;
  void set_l2(uint64_t value);
  private:
  uint64_t _internal_l2() const;
  void _internal_set_l2(uint64_t value);
  public:

  // double d1 = 5;
  void clear_d1();
  double d1() const;
  void set_d1(double value);
  private:
  double _internal_d1() const;
  void _internal_set_d1(double value);
  public:

  // double d2 = 6;
  void clear_d2();
  double d2() const;
  void set_d2(double value);
  private:
  double _internal_d2() const;
  void _internal_set_d2(double value);
  public:

  // @@protoc_insertion_point(class_scope:rum.test.proto.Number)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  int32_t n1_;
  int32_t n2_;
  uint64_t l1_;
  uint64_t l2_;
  double d1_;
  double d2_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_test_5fnumber_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Number

// int32 n1 = 1;
inline void Number::clear_n1() {
  n1_ = 0;
}
inline int32_t Number::_internal_n1() const {
  return n1_;
}
inline int32_t Number::n1() const {
  // @@protoc_insertion_point(field_get:rum.test.proto.Number.n1)
  return _internal_n1();
}
inline void Number::_internal_set_n1(int32_t value) {
  
  n1_ = value;
}
inline void Number::set_n1(int32_t value) {
  _internal_set_n1(value);
  // @@protoc_insertion_point(field_set:rum.test.proto.Number.n1)
}

// int32 n2 = 2;
inline void Number::clear_n2() {
  n2_ = 0;
}
inline int32_t Number::_internal_n2() const {
  return n2_;
}
inline int32_t Number::n2() const {
  // @@protoc_insertion_point(field_get:rum.test.proto.Number.n2)
  return _internal_n2();
}
inline void Number::_internal_set_n2(int32_t value) {
  
  n2_ = value;
}
inline void Number::set_n2(int32_t value) {
  _internal_set_n2(value);
  // @@protoc_insertion_point(field_set:rum.test.proto.Number.n2)
}

// uint64 l1 = 3;
inline void Number::clear_l1() {
  l1_ = uint64_t{0u};
}
inline uint64_t Number::_internal_l1() const {
  return l1_;
}
inline uint64_t Number::l1() const {
  // @@protoc_insertion_point(field_get:rum.test.proto.Number.l1)
  return _internal_l1();
}
inline void Number::_internal_set_l1(uint64_t value) {
  
  l1_ = value;
}
inline void Number::set_l1(uint64_t value) {
  _internal_set_l1(value);
  // @@protoc_insertion_point(field_set:rum.test.proto.Number.l1)
}

// uint64 l2 = 4;
inline void Number::clear_l2() {
  l2_ = uint64_t{0u};
}
inline uint64_t Number::_internal_l2() const {
  return l2_;
}
inline uint64_t Number::l2() const {
  // @@protoc_insertion_point(field_get:rum.test.proto.Number.l2)
  return _internal_l2();
}
inline void Number::_internal_set_l2(uint64_t value) {
  
  l2_ = value;
}
inline void Number::set_l2(uint64_t value) {
  _internal_set_l2(value);
  // @@protoc_insertion_point(field_set:rum.test.proto.Number.l2)
}

// double d1 = 5;
inline void Number::clear_d1() {
  d1_ = 0;
}
inline double Number::_internal_d1() const {
  return d1_;
}
inline double Number::d1() const {
  // @@protoc_insertion_point(field_get:rum.test.proto.Number.d1)
  return _internal_d1();
}
inline void Number::_internal_set_d1(double value) {
  
  d1_ = value;
}
inline void Number::set_d1(double value) {
  _internal_set_d1(value);
  // @@protoc_insertion_point(field_set:rum.test.proto.Number.d1)
}

// double d2 = 6;
inline void Number::clear_d2() {
  d2_ = 0;
}
inline double Number::_internal_d2() const {
  return d2_;
}
inline double Number::d2() const {
  // @@protoc_insertion_point(field_get:rum.test.proto.Number.d2)
  return _internal_d2();
}
inline void Number::_internal_set_d2(double value) {
  
  d2_ = value;
}
inline void Number::set_d2(double value) {
  _internal_set_d2(value);
  // @@protoc_insertion_point(field_set:rum.test.proto.Number.d2)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace test
}  // namespace rum

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_test_5fnumber_2eproto
